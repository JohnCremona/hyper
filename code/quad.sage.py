# This file was *autogenerated* from the file quad.sage
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4)
var('a','b','c')
assume(a>_sage_const_0 )
assume(b>_sage_const_0 )
assume(c>_sage_const_0 )
assume(a<_sage_const_1 )
assume(b<_sage_const_1 )
assume(c<_sage_const_1 )
r = integral(integral(integral(_sage_const_1 ,c,b**_sage_const_2 /(_sage_const_4 *a),_sage_const_1 ),a,b**_sage_const_2 /_sage_const_4 ,_sage_const_1 ),b,_sage_const_0 ,_sage_const_1 )
r = r.canonicalize_radical()
print("Probability of being positive definite on [0,1]^3: %s" % r)
# -1/6*log(2) + 31/36
# this only cover the box [0,1]^3 so gives the volume of the sub-box which are pos.def.;
# so the prob. of pos.def. is 1/4 of this and the prob of neg def is the same.
print("Probability of being definite:              %s" % (r/_sage_const_2 ))
# -1/12*log(2) + 31/72
print("Probability of being negative definite:     %s" % (r/_sage_const_4 ))
# -1/24*log(2) + 31/144
s=_sage_const_1 -r/_sage_const_4 
print("Probability of being not negative definite: %s" % s)
# 1/24*log(2) + 113/144
print("Numerically:                                %s" % s.n())
# 0.813603354745553
